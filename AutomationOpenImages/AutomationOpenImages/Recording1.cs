///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace AutomationOpenImages
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The Recording1 recording.
    /// </summary>
    [TestModule("54d9f563-b350-47a2-b3a7-b9d922eda964", ModuleType.Recording, 1)]
    public partial class Recording1 : ITestModule
    {
        /// <summary>
        /// Holds an instance of the AutomationOpenImagesRepository repository.
        /// </summary>
        public static AutomationOpenImagesRepository repo = AutomationOpenImagesRepository.Instance;

        static Recording1 instance = new Recording1();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public Recording1()
        {
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static Recording1 Instance
        {
            get { return instance; }
        }

#region Variables

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", "7.0")]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", "7.0")]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 100;
            Delay.SpeedFactor = 1.00;

            Init();

            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ModeSelectorBurtton' at 59;36.", repo.ModeSelectorBurttonInfo, new RecordItemIndex(0));
            repo.ModeSelectorBurtton.Click("59;36");
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'SnapXUntitled.FeatureFinder' at Center.", repo.SnapXUntitled.FeatureFinderInfo, new RecordItemIndex(1));
            repo.SnapXUntitled.FeatureFinder.Click();
            Delay.Milliseconds(200);
            
            //Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'SnapXUntitled.TextMeasure' at 32;9.", repo.SnapXUntitled.TextMeasureInfo, new RecordItemIndex(2));
            //repo.SnapXUntitled.TextMeasure.Click("32;9");
            //Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'SnapXUntitled.TitleBar' at 833;13.", repo.SnapXUntitled.TitleBarInfo, new RecordItemIndex(3));
            repo.SnapXUntitled.TitleBar.Click("833;13");
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'SnapXUntitled.OpenImageButton' at Center.", repo.SnapXUntitled.OpenImageButtonInfo, new RecordItemIndex(4));
            repo.SnapXUntitled.OpenImageButton.Click();
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '{Delete}'.", new RecordItemIndex(5));
            Keyboard.Press("{Delete}");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence 'D:\\Joro\\GIT_Automations\\VERSION 3\\Images\\1.bmp'.", new RecordItemIndex(6));
            Keyboard.Press("D:\\Joro\\GIT_Automations\\VERSION 3\\Images\\1.bmp");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '{Return}'.", new RecordItemIndex(7));
            Keyboard.Press("{Return}");
            Delay.Milliseconds(0);
            
            try {
                Report.Log(ReportLevel.Info, "Validation", "(Optional Action)\r\nValidating CompareImage (Screenshot: 'Screenshot1' with region {X=0,Y=0,Width=1256,Height=936}) on item 'SnapXUntitled.Pictures'.", repo.SnapXUntitled.PicturesInfo, new RecordItemIndex(8));
                Validate.CompareImage(repo.SnapXUntitled.PicturesInfo, Pictures_Screenshot1, Pictures_Screenshot1_Options, Validate.DefaultMessage, false);
                Delay.Milliseconds(100);
            } catch(Exception ex) { Report.Log(ReportLevel.Warn, "Module", "(Optional Action) " + ex.Message, new RecordItemIndex(8)); }
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'SnapXUntitled.OpenImageButton' at Center.", repo.SnapXUntitled.OpenImageButtonInfo, new RecordItemIndex(9));
            repo.SnapXUntitled.OpenImageButton.Click();
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '{Delete}'.", new RecordItemIndex(10));
            Keyboard.Press("{Delete}");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence 'D:\\Joro\\GIT_Automations\\VERSION 3\\Images\\2.bmp'.", new RecordItemIndex(11));
            Keyboard.Press("D:\\Joro\\GIT_Automations\\VERSION 3\\Images\\2.bmp");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '{Return}'.", new RecordItemIndex(12));
            Keyboard.Press("{Return}");
            Delay.Milliseconds(0);
            
            try {
                Report.Log(ReportLevel.Info, "Validation", "(Optional Action)\r\nValidating CompareImage (Screenshot: 'Screenshot2' with region {X=0,Y=0,Width=1256,Height=936}) on item 'SnapXUntitled.Pictures'.", repo.SnapXUntitled.PicturesInfo, new RecordItemIndex(13));
                Validate.CompareImage(repo.SnapXUntitled.PicturesInfo, Pictures_Screenshot2, Pictures_Screenshot2_Options, Validate.DefaultMessage, false);
                Delay.Milliseconds(100);
            } catch(Exception ex) { Report.Log(ReportLevel.Warn, "Module", "(Optional Action) " + ex.Message, new RecordItemIndex(13)); }
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'SnapXUntitled.OpenImageButton' at Center.", repo.SnapXUntitled.OpenImageButtonInfo, new RecordItemIndex(14));
            repo.SnapXUntitled.OpenImageButton.Click();
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '{Delete}'.", new RecordItemIndex(15));
            Keyboard.Press("{Delete}");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence 'D:\\Joro\\GIT_Automations\\VERSION 3\\Images\\3.bmp'.", new RecordItemIndex(16));
            Keyboard.Press("D:\\Joro\\GIT_Automations\\VERSION 3\\Images\\3.bmp");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '{Return}'.", new RecordItemIndex(17));
            Keyboard.Press("{Return}");
            Delay.Milliseconds(0);
            
            try {
                Report.Log(ReportLevel.Info, "Validation", "(Optional Action)\r\nValidating CompareImage (Screenshot: 'Screenshot3' with region {X=0,Y=0,Width=1256,Height=936}) on item 'SnapXUntitled.Pictures'.", repo.SnapXUntitled.PicturesInfo, new RecordItemIndex(18));
                Validate.CompareImage(repo.SnapXUntitled.PicturesInfo, Pictures_Screenshot3, Pictures_Screenshot3_Options, Validate.DefaultMessage, false);
                Delay.Milliseconds(100);
            } catch(Exception ex) { Report.Log(ReportLevel.Warn, "Module", "(Optional Action) " + ex.Message, new RecordItemIndex(18)); }
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'SnapXUntitled.OpenImageButton' at Center.", repo.SnapXUntitled.OpenImageButtonInfo, new RecordItemIndex(19));
            repo.SnapXUntitled.OpenImageButton.Click();
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '{Delete}'.", new RecordItemIndex(20));
            Keyboard.Press("{Delete}");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence 'D:\\Joro\\GIT_Automations\\VERSION 3\\Images\\4.bmp'.", new RecordItemIndex(21));
            Keyboard.Press("D:\\Joro\\GIT_Automations\\VERSION 3\\Images\\4.bmp");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '{Return}'.", new RecordItemIndex(22));
            Keyboard.Press("{Return}");
            Delay.Milliseconds(0);
            
            try {
                Report.Log(ReportLevel.Info, "Validation", "(Optional Action)\r\nValidating CompareImage (Screenshot: 'Screenshot4' with region {X=0,Y=0,Width=1256,Height=936}) on item 'SnapXUntitled.Pictures'.", repo.SnapXUntitled.PicturesInfo, new RecordItemIndex(23));
                Validate.CompareImage(repo.SnapXUntitled.PicturesInfo, Pictures_Screenshot4, Pictures_Screenshot4_Options, Validate.DefaultMessage, false);
                Delay.Milliseconds(100);
            } catch(Exception ex) { Report.Log(ReportLevel.Warn, "Module", "(Optional Action) " + ex.Message, new RecordItemIndex(23)); }
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'SnapXUntitled.OpenImageButton' at Center.", repo.SnapXUntitled.OpenImageButtonInfo, new RecordItemIndex(24));
            repo.SnapXUntitled.OpenImageButton.Click();
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '{Delete}'.", new RecordItemIndex(25));
            Keyboard.Press("{Delete}");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence 'D:\\Joro\\GIT_Automations\\VERSION 3\\Images\\5.bmp'.", new RecordItemIndex(26));
            Keyboard.Press("D:\\Joro\\GIT_Automations\\VERSION 3\\Images\\5.bmp");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '{Return}'.", new RecordItemIndex(27));
            Keyboard.Press("{Return}");
            Delay.Milliseconds(0);
            
            try {
                Report.Log(ReportLevel.Info, "Validation", "(Optional Action)\r\nValidating CompareImage (Screenshot: 'Screenshot5' with region {X=0,Y=0,Width=1256,Height=936}) on item 'SnapXUntitled.Pictures'.", repo.SnapXUntitled.PicturesInfo, new RecordItemIndex(28));
                Validate.CompareImage(repo.SnapXUntitled.PicturesInfo, Pictures_Screenshot5, Pictures_Screenshot5_Options, Validate.DefaultMessage, false);
                Delay.Milliseconds(100);
            } catch(Exception ex) { Report.Log(ReportLevel.Warn, "Module", "(Optional Action) " + ex.Message, new RecordItemIndex(28)); }
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'SnapXUntitled.OpenImageButton' at Center.", repo.SnapXUntitled.OpenImageButtonInfo, new RecordItemIndex(29));
            repo.SnapXUntitled.OpenImageButton.Click();
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '{Delete}'.", new RecordItemIndex(30));
            Keyboard.Press("{Delete}");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence 'D:\\Joro\\GIT_Automations\\VERSION 3\\Images\\6.bmp'.", new RecordItemIndex(31));
            Keyboard.Press("D:\\Joro\\GIT_Automations\\VERSION 3\\Images\\6.bmp");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '{Return}'.", new RecordItemIndex(32));
            Keyboard.Press("{Return}");
            Delay.Milliseconds(0);
            
            try {
                Report.Log(ReportLevel.Info, "Validation", "(Optional Action)\r\nValidating CompareImage (Screenshot: 'Screenshot6' with region {X=0,Y=0,Width=1256,Height=936}) on item 'SnapXUntitled.Pictures'.", repo.SnapXUntitled.PicturesInfo, new RecordItemIndex(33));
                Validate.CompareImage(repo.SnapXUntitled.PicturesInfo, Pictures_Screenshot6, Pictures_Screenshot6_Options, Validate.DefaultMessage, false);
                Delay.Milliseconds(100);
            } catch(Exception ex) { Report.Log(ReportLevel.Warn, "Module", "(Optional Action) " + ex.Message, new RecordItemIndex(33)); }
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'SnapXUntitled.OpenImageButton' at Center.", repo.SnapXUntitled.OpenImageButtonInfo, new RecordItemIndex(34));
            repo.SnapXUntitled.OpenImageButton.Click();
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '{Delete}'.", new RecordItemIndex(35));
            Keyboard.Press("{Delete}");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence 'D:\\Joro\\GIT_Automations\\VERSION 3\\Images\\7.bmp'.", new RecordItemIndex(36));
            Keyboard.Press("D:\\Joro\\GIT_Automations\\VERSION 3\\Images\\7.bmp");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '{Return}'.", new RecordItemIndex(37));
            Keyboard.Press("{Return}");
            Delay.Milliseconds(0);
            
            try {
                Report.Log(ReportLevel.Info, "Validation", "(Optional Action)\r\nValidating CompareImage (Screenshot: 'Screenshot7' with region {X=0,Y=0,Width=1256,Height=936}) on item 'SnapXUntitled.Pictures'.", repo.SnapXUntitled.PicturesInfo, new RecordItemIndex(38));
                Validate.CompareImage(repo.SnapXUntitled.PicturesInfo, Pictures_Screenshot7, Pictures_Screenshot7_Options, Validate.DefaultMessage, false);
                Delay.Milliseconds(100);
            } catch(Exception ex) { Report.Log(ReportLevel.Warn, "Module", "(Optional Action) " + ex.Message, new RecordItemIndex(38)); }
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'SnapXUntitled.CrossHairButton' at Center.", repo.SnapXUntitled.CrossHairButtonInfo, new RecordItemIndex(39));
            repo.SnapXUntitled.CrossHairButton.Click();
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Right Click item 'SnapXUntitled.RightClickToReachTheGoButton' at 33;190.", repo.SnapXUntitled.RightClickToReachTheGoButtonInfo, new RecordItemIndex(40));
            repo.SnapXUntitled.RightClickToReachTheGoButton.Click(System.Windows.Forms.MouseButtons.Right, "33;190");
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'SNAPX.ModeSelector' at 81;10.", repo.SNAPX.ModeSelectorInfo, new RecordItemIndex(41));
            repo.SNAPX.ModeSelector.Click("81;10");
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ModeSelectorBurtton' at 72;162.", repo.ModeSelectorBurttonInfo, new RecordItemIndex(42));
            repo.ModeSelectorBurtton.Click("72;162");
            Delay.Milliseconds(200);
            
        }

#region Image Feature Data
        CompressedImage Pictures_Screenshot1
        { get { return repo.SnapXUntitled.PicturesInfo.GetScreenshot1(new Rectangle(0, 0, 1256, 936)); } }

        Imaging.FindOptions Pictures_Screenshot1_Options
        { get { return Imaging.FindOptions.Parse("1;None;0,0,1256,936;True;10000000;0ms"); } }

        CompressedImage Pictures_Screenshot2
        { get { return repo.SnapXUntitled.PicturesInfo.GetScreenshot2(new Rectangle(0, 0, 1256, 936)); } }

        Imaging.FindOptions Pictures_Screenshot2_Options
        { get { return Imaging.FindOptions.Parse("1;None;0,0,1256,936;True;10000000;0ms"); } }

        CompressedImage Pictures_Screenshot3
        { get { return repo.SnapXUntitled.PicturesInfo.GetScreenshot3(new Rectangle(0, 0, 1256, 936)); } }

        Imaging.FindOptions Pictures_Screenshot3_Options
        { get { return Imaging.FindOptions.Parse("1;None;0,0,1256,936;True;10000000;0ms"); } }

        CompressedImage Pictures_Screenshot4
        { get { return repo.SnapXUntitled.PicturesInfo.GetScreenshot4(new Rectangle(0, 0, 1256, 936)); } }

        Imaging.FindOptions Pictures_Screenshot4_Options
        { get { return Imaging.FindOptions.Parse("1;None;0,0,1256,936;True;10000000;0ms"); } }

        CompressedImage Pictures_Screenshot5
        { get { return repo.SnapXUntitled.PicturesInfo.GetScreenshot5(new Rectangle(0, 0, 1256, 936)); } }

        Imaging.FindOptions Pictures_Screenshot5_Options
        { get { return Imaging.FindOptions.Parse("1;None;0,0,1256,936;True;10000000;0ms"); } }

        CompressedImage Pictures_Screenshot6
        { get { return repo.SnapXUntitled.PicturesInfo.GetScreenshot6(new Rectangle(0, 0, 1256, 936)); } }

        Imaging.FindOptions Pictures_Screenshot6_Options
        { get { return Imaging.FindOptions.Parse("1;None;0,0,1256,936;True;10000000;0ms"); } }

        CompressedImage Pictures_Screenshot7
        { get { return repo.SnapXUntitled.PicturesInfo.GetScreenshot7(new Rectangle(0, 0, 1256, 936)); } }

        Imaging.FindOptions Pictures_Screenshot7_Options
        { get { return Imaging.FindOptions.Parse("1;None;0,0,1256,936;True;10000000;0ms"); } }

#endregion
    }
#pragma warning restore 0436
}
